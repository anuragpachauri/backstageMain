apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: Linodeinfrastructure
  title: Linode infrastructure
  description: Template for the Creating linode instance
spec:
  owner: backstage
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
        - instance_type
        - region
        - swap_size
        - tagvalue
        - ssh_key
        - admin_password
        - vm_label
        - linode_token

      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5

        instance_type:
          title: instance_type
          type: string
          description: instance_type

        region:
          title: region
          type: string
          description: region

        swap_size:
          title: swap_size
          type: string
          description: swap_size

        tagvalue:
          title: tagvalue
          type: string
          description: tagvalue

        ssh_key:
          title: ssh_key
          type: string
          description: ssh_key

        admin_password:
          title: admin_password
          type: string
          description: admin_password
        
        vm_label:
          title: vm_label
          type: string
          description: vm_label

        linode_token:
          title: linode_token
          type: string
          description: linode_token

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          instance_type: ${{ parameters.instance_type }}
          region: ${{ parameters.region }}
          swap_size: ${{ parameters.swap_size }}
          tagvalue: ${{ parameters.tagvalue }}
          ssh_key: ${{ parameters.ssh_key }}
          admin_password: ${{ parameters.admin_password }}
          vm_label: ${{ parameters.vm_label }}
          linode_token: ${{ parameters.linode_token }}


    # This step publishes the contents of the working directory to GitHub.
    - id: publish:github
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
    

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoUrl: "https://github.com/anuragpachauri/${{ parameters.name }}/blob/master/catalog-info.yaml"

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
